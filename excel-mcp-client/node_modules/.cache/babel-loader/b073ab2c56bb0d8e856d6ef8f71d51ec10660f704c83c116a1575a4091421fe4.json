{"ast":null,"code":"var _jsxFileName = \"/Users/lilianrage/Library/Mobile Documents/com~apple~CloudDocs/ALYON/Produits/MCP_Server/excel-mcp-client/src/components/ExcelConnector/ExcelConnector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { callExcelMCP, analyzeExcelWithEmbedding } from '../../services/api';\nimport './ExcelConnector.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExcelConnector() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [excelFile, setExcelFile] = useState(null);\n  const [excelData, setExcelData] = useState(null);\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState(null);\n  const [topK, setTopK] = useState(5);\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file && (file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || file.type === 'application/vnd.ms-excel')) {\n      setExcelFile(file);\n      setExcelData(null); // Réinitialiser les données précédentes\n      setResults(null); // Réinitialiser les résultats précédents\n    } else {\n      setError('Veuillez sélectionner un fichier Excel valide (.xlsx ou .xls)');\n    }\n  };\n  const handleLoadExcel = async () => {\n    if (!excelFile) return;\n    setLoading(true);\n    setError(null);\n    try {\n      // Utiliser la commande get_workbook_metadata pour obtenir des informations sur le classeur\n      const result = await callExcelMCP('get_workbook_metadata', {\n        filepath: excelFile.name\n      }, [excelFile]);\n      if (result.success) {\n        // Extraire les données avec une commande similaire à read_data_from_excel\n        // Note: Cette partie peut nécessiter des ajustements selon l'API exacte\n        const sheetName = result.result.sheets[0]; // Prendre la première feuille par défaut\n\n        const dataResult = await callExcelMCP('read_data_from_excel', {\n          filepath: excelFile.name,\n          sheet_name: sheetName\n        }, [excelFile]);\n\n        // Structurer les données pour l'affichage\n        setExcelData({\n          headers: dataResult.result.headers || [],\n          rows: dataResult.result.rows || [],\n          rowCount: dataResult.result.row_count || 0,\n          columnCount: dataResult.result.column_count || 0,\n          sheetName: sheetName\n        });\n      } else {\n        setError('Erreur lors du chargement du fichier Excel');\n      }\n    } catch (err) {\n      setError(`Erreur: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAnalyze = async () => {\n    if (!excelFile || !query.trim()) return;\n    setLoading(true);\n    setError(null);\n    setResults(null);\n    try {\n      // Appeler l'API d'analyse avec embedding\n      const response = await analyzeExcelWithEmbedding(query, excelFile, topK);\n      if (response.success) {\n        setResults(response.results);\n      } else {\n        setError(response.error || 'Erreur lors de l\\'analyse');\n      }\n    } catch (err) {\n      setError(`Erreur: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"excel-connector\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Excel MCP Analyzer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-uploader\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"S\\xE9lectionner un fichier Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".xlsx,.xls\",\n        onChange: handleFileChange,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), excelFile && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadExcel,\n        disabled: loading,\n        className: \"load-button\",\n        children: [\"Charger \", excelFile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-indicator\",\n      children: \"Chargement en cours...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }, this), excelData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Aper\\xE7u des donn\\xE9es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Feuille:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), \" \", excelData.sheetName, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Lignes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), \" \", excelData.rowCount, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Colonnes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), \" \", excelData.columnCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this), excelData.headers.map((header, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: header\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: excelData.rows.slice(0, 5).map((row, rowIdx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"row-number\",\n                children: rowIdx + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this), row.map((cell, cellIdx) => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: cell !== null ? cell : ''\n              }, cellIdx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 23\n              }, this))]\n            }, rowIdx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), excelData.rowCount > 5 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"more-rows-note\",\n        children: [\"+ \", excelData.rowCount - 5, \" lignes suppl\\xE9mentaires\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"query-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Poser une question sur ces donn\\xE9es\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Nombre de r\\xE9sultats \\xE0 afficher:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              max: \"20\",\n              value: topK,\n              onChange: e => setTopK(Math.max(1, parseInt(e.target.value) || 1))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"query-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: query,\n            onChange: e => setQuery(e.target.value),\n            placeholder: \"Ex: Quelles sont les lignes concernant...\",\n            disabled: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAnalyze,\n            disabled: !query.trim() || loading,\n            children: \"Analyser\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"R\\xE9sultats de l'analyse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"score-column\",\n                  children: \"Score\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"index-column\",\n                  children: \"Ligne\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 23\n                }, this), results.headers.map((header, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: header\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: results.rows.map((row, rowIdx) => {\n                const originalIndex = results.original_indices[rowIdx];\n                const similarityScore = results.similarity_scores[originalIndex];\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: rowIdx === 0 ? \"top-result\" : \"\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"similarity-score\",\n                    children: [(similarityScore * 100).toFixed(2), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"row-index\",\n                    children: originalIndex + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 27\n                  }, this), row.map((cell, cellIdx) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: cell !== null ? cell : ''\n                  }, cellIdx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 29\n                  }, this))]\n                }, rowIdx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(ExcelConnector, \"2x2UVVxy4aFfPFQbxRTduzMHx14=\");\n_c = ExcelConnector;\nexport default ExcelConnector;\nvar _c;\n$RefreshReg$(_c, \"ExcelConnector\");","map":{"version":3,"names":["React","useState","useEffect","callExcelMCP","analyzeExcelWithEmbedding","jsxDEV","_jsxDEV","ExcelConnector","_s","loading","setLoading","error","setError","excelFile","setExcelFile","excelData","setExcelData","query","setQuery","results","setResults","topK","setTopK","handleFileChange","e","file","target","files","type","handleLoadExcel","result","filepath","name","success","sheetName","sheets","dataResult","sheet_name","headers","rows","rowCount","row_count","columnCount","column_count","err","message","handleAnalyze","trim","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","disabled","onClick","map","header","idx","slice","row","rowIdx","cell","cellIdx","min","max","value","Math","parseInt","placeholder","originalIndex","original_indices","similarityScore","similarity_scores","toFixed","_c","$RefreshReg$"],"sources":["/Users/lilianrage/Library/Mobile Documents/com~apple~CloudDocs/ALYON/Produits/MCP_Server/excel-mcp-client/src/components/ExcelConnector/ExcelConnector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { callExcelMCP, analyzeExcelWithEmbedding } from '../../services/api';\nimport './ExcelConnector.css';\n\nfunction ExcelConnector() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [excelFile, setExcelFile] = useState(null);\n  const [excelData, setExcelData] = useState(null);\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState(null);\n  const [topK, setTopK] = useState(5);\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file && (file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || \n                file.type === 'application/vnd.ms-excel')) {\n      setExcelFile(file);\n      setExcelData(null); // Réinitialiser les données précédentes\n      setResults(null);   // Réinitialiser les résultats précédents\n    } else {\n      setError('Veuillez sélectionner un fichier Excel valide (.xlsx ou .xls)');\n    }\n  };\n\n  const handleLoadExcel = async () => {\n    if (!excelFile) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Utiliser la commande get_workbook_metadata pour obtenir des informations sur le classeur\n      const result = await callExcelMCP('get_workbook_metadata', { filepath: excelFile.name }, [excelFile]);\n      \n      if (result.success) {\n        // Extraire les données avec une commande similaire à read_data_from_excel\n        // Note: Cette partie peut nécessiter des ajustements selon l'API exacte\n        const sheetName = result.result.sheets[0]; // Prendre la première feuille par défaut\n        \n        const dataResult = await callExcelMCP('read_data_from_excel', {\n          filepath: excelFile.name,\n          sheet_name: sheetName\n        }, [excelFile]);\n        \n        // Structurer les données pour l'affichage\n        setExcelData({\n          headers: dataResult.result.headers || [],\n          rows: dataResult.result.rows || [],\n          rowCount: dataResult.result.row_count || 0,\n          columnCount: dataResult.result.column_count || 0,\n          sheetName: sheetName\n        });\n      } else {\n        setError('Erreur lors du chargement du fichier Excel');\n      }\n    } catch (err) {\n      setError(`Erreur: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAnalyze = async () => {\n    if (!excelFile || !query.trim()) return;\n    \n    setLoading(true);\n    setError(null);\n    setResults(null);\n    \n    try {\n      // Appeler l'API d'analyse avec embedding\n      const response = await analyzeExcelWithEmbedding(query, excelFile, topK);\n      \n      if (response.success) {\n        setResults(response.results);\n      } else {\n        setError(response.error || 'Erreur lors de l\\'analyse');\n      }\n    } catch (err) {\n      setError(`Erreur: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"excel-connector\">\n      <header>\n        <h1>Excel MCP Analyzer</h1>\n      </header>\n      \n      {error && <div className=\"error-message\">{error}</div>}\n      \n      <div className=\"file-uploader\">\n        <h2>Sélectionner un fichier Excel</h2>\n        <input \n          type=\"file\" \n          accept=\".xlsx,.xls\" \n          onChange={handleFileChange}\n          disabled={loading}\n        />\n        {excelFile && (\n          <button \n            onClick={handleLoadExcel} \n            disabled={loading}\n            className=\"load-button\"\n          >\n            Charger {excelFile.name}\n          </button>\n        )}\n      </div>\n      \n      {loading && <div className=\"loading-indicator\">Chargement en cours...</div>}\n      \n      {excelData && (\n        <div className=\"data-preview\">\n          <h2>Aperçu des données</h2>\n          <p>\n            <strong>Feuille:</strong> {excelData.sheetName} | \n            <strong>Lignes:</strong> {excelData.rowCount} | \n            <strong>Colonnes:</strong> {excelData.columnCount}\n          </p>\n          \n          <div className=\"table-container\">\n            <table>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  {excelData.headers.map((header, idx) => (\n                    <th key={idx}>{header}</th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {excelData.rows.slice(0, 5).map((row, rowIdx) => (\n                  <tr key={rowIdx}>\n                    <td className=\"row-number\">{rowIdx + 1}</td>\n                    {row.map((cell, cellIdx) => (\n                      <td key={cellIdx}>{cell !== null ? cell : ''}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          \n          {excelData.rowCount > 5 && (\n            <p className=\"more-rows-note\">\n              + {excelData.rowCount - 5} lignes supplémentaires\n            </p>\n          )}\n          \n          <div className=\"query-section\">\n            <h2>Poser une question sur ces données</h2>\n            \n            <div className=\"options\">\n              <label>\n                Nombre de résultats à afficher:\n                <input \n                  type=\"number\" \n                  min=\"1\" \n                  max=\"20\" \n                  value={topK} \n                  onChange={(e) => setTopK(Math.max(1, parseInt(e.target.value) || 1))}\n                />\n              </label>\n            </div>\n            \n            <div className=\"query-input\">\n              <input\n                type=\"text\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n                placeholder=\"Ex: Quelles sont les lignes concernant...\"\n                disabled={loading}\n              />\n              <button \n                onClick={handleAnalyze} \n                disabled={!query.trim() || loading}\n              >\n                Analyser\n              </button>\n            </div>\n          </div>\n          \n          {results && (\n            <div className=\"results-section\">\n              <h2>Résultats de l'analyse</h2>\n              \n              <div className=\"table-container\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th className=\"score-column\">Score</th>\n                      <th className=\"index-column\">Ligne</th>\n                      {results.headers.map((header, idx) => (\n                        <th key={idx}>{header}</th>\n                      ))}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {results.rows.map((row, rowIdx) => {\n                      const originalIndex = results.original_indices[rowIdx];\n                      const similarityScore = results.similarity_scores[originalIndex];\n                      \n                      return (\n                        <tr key={rowIdx} className={rowIdx === 0 ? \"top-result\" : \"\"}>\n                          <td className=\"similarity-score\">\n                            {(similarityScore * 100).toFixed(2)}%\n                          </td>\n                          <td className=\"row-index\">{originalIndex + 1}</td>\n                          {row.map((cell, cellIdx) => (\n                            <td key={cellIdx}>{cell !== null ? cell : ''}</td>\n                          ))}\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ExcelConnector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}